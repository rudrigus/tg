clc
clear
close all

cd d:/trabaio/TG
I = imread('./Imagens/Teste/ImagemTeste4.jpg');
I = rgb2gray(I);


% retirar informacoes desnecessarias para o calculo da matriz de
% transformacao
a = cast(I>100,'uint8');
J = I.*a;

% filtro de mediana
H = fspecial('average',7);
J = imfilter(J,H,'replicate');


mapaCor = colormap(gray(256));
imshow(I,mapaCor)
hold on
Canto = corner(J,4,'l',0.01);
plot(Canto(:,1),Canto(:,2),'rx')

%%Ordenar elementos de Canto
[A,B] = sort(Canto,'descend');
for i=1:1:4
    A(i,2) = Canto(B(:,1)==i,2);
    
end
Canto = A;

X = Canto(:,1);
Y = Canto(:,2);
plot([X;X(1)],[Y;Y(1)],'r')

%imprimir quadrado, em azul
% plot([100 100 500 500 100], [100 500 500 100 100],'b')
plot([600 600 2000 2000 600], [1000 2000 2000 1000 1000],'b')

%coordenadas "reais" dos ponto contidos em Canto
Xp=[2000; 2000; 500; 500];
Yp=[2500; 1500; 1500; 2500];

B = [ X Y ones(size(X)) zeros(4,3)        -X.*Xp -Y.*Xp ...
      zeros(4,3)        X Y ones(size(X)) -X.*Yp -Y.*Yp ];
B = reshape (B', 8 , 8 )';
D = [ Xp , Yp ];
D = reshape (D', 8 , 1 );
l = inv(B) * D;
A = reshape([l(1:6)' 0 0 1 ],3,3)';
C = [l(7:8)' 1];
%while 1 ,
% [x1,y1]=ginput(1); 
% [x2,y2]=ginput(1);
% for u=0:.1:1,
%   x = u*x1+(1-u)*x2;
%   y = u*y1+(1-u)*y2;
%   plot(x,y,'xr'); t=A*[x;y;1]/(C*[x;y;1]);plot(t(1),t(2),'ob') 
%   end
%end


hold off
A = reshape([l(1:8)' 1 ],3,3)';
tform = maketform('projective',A')

% Imagem corrigida
% I2 = imtransform(I,tform);
% figure;
% imshow(I2,mapaCor);
% 
